{"version":3,"sources":["hoc/Layout.js","components/CongressList.js","components/CongressMember.js","App.js","store/actions/data.js","store/actions/actionTypes.js","serviceWorker.js","utils/index.js","store/reducers/data.js","store/reducers/index.js","index.js"],"names":["Layout","this","props","children","Component","CongressList","state","searchInput","advancedSearchInput","searchKey","members","advanced_search","advanced_title","loading","currentPage","membersPerPage","handleInput","e","target","value","type","checked","name","setState","handlePageClick","event","Number","id","fetchCongress","congress","chamber","axios","get","then","response","data","results","console","log","handleSelectChange","handleAdvanceSearch","prevState","searchedMembers","filter","member","first_name","toLowerCase","includes","last_name","party","gender","phone","office","advancedSearchedMembers","toString","newMembers","indexOfLastMember","indexOfFirstMember","currentMembers","slice","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","map","number","key","onClick","keys","Object","className","hidden","onChange","k","idx","placeholder","to","short_title","connect","CongressMember","memberInfo","selectedRoles","fetchMember","r","fetchedItems","handleRoles","newRoles","match","params","find","m","details","roles","role","moment","start_date","format","committees","cm","begin_date","end_date","card","facebook_account","href","fontSize","color","twitter_account","youtube_account","date_of_birth","total_votes","url","dispatch","onFetchMembers","fetchMembersSuccess","catch","err","error","actions","useEffect","routes","path","component","exact","Boolean","window","location","hostname","updatedObject","oldObject","updatedProperities","initialState","action","reducer","combineReducers","enhancers","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe0c0522.chunk.js","sourcesContent":["import React, { Component} from 'react';\nclass Layout extends Component {\n    \n    render() {\n        return (\n            <div>\n                <header>\n\n                ProPublica Congress\n                </header>\n                <section>\n                    <content>\n                    {this.props.children}\n                    </content>\n                </section>\n                <footer>\n\n                ProPublica Congress 2019\n                </footer>\n            </div>\n        )\n    }\n    \n}\nexport default Layout\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\n\n\nclass CongressList extends Component {\n    state = {\n        searchInput: '',\n        advancedSearchInput: '',\n        searchKey: 'first_name',\n        members: [],\n        advanced_search: false,\n        advanced_title: 'Advanced',\n        loading: true,\n        currentPage: 1,\n        membersPerPage: 7\n\n    }\n    componentDidMount () {\n        \n    }\n    handleInput = (e) => {\n        const target = e.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        });\n    }\n    handlePageClick = (event) => {\n        this.setState({\n          currentPage: Number(event.target.id)\n        });\n      }\n\n    fetchCongress = (congress, chamber) => {\n\n        axios.get(\"https://api.propublica.org/congress/v1/\"+congress+\"/\"+chamber+\"/members.json\", { 'headers': { 'X-API-Key': '5og6CCG0fxLBhSoanWGSMFsr7FDIs609Mvrg8r6n' } })\n        .then((response => {\n            const members = response.data.results[0].members\n            this.setState({members: members, loading: false})\n            console.log(members)\n        }))\n\n    }\n    handleSelectChange = (e) => {\n        this.setState({searchKey: e.target.value});\n        console.log(e.target.value)\n\n    }\n    handleAdvanceSearch = () => {\n    \n        this.setState(prevState => ({advanced_search: !prevState.advanced_search}))\n    }\n\n    render() {\n        const { searchInput, advanced_search, advancedSearchInput, searchKey, currentPage, membersPerPage } = this.state\n        const { members, loading } = this.props\n       \n        const searchedMembers = members.filter(member => member.first_name.toLowerCase().includes(searchInput.toLowerCase())\n         || member.last_name.toLowerCase().includes(searchInput.toLowerCase())\n         || member.party.toLowerCase().includes(searchInput.toLowerCase())\n         || member.state.toLowerCase().includes(searchInput.toLowerCase())\n         || (member.party+'-'+member.state).toLowerCase().includes(searchInput.toLowerCase())\n         || member.gender.toLowerCase().includes(searchInput.toLowerCase())\n         || member.phone.toLowerCase().includes(searchInput.toLowerCase())\n         || member.office.toLowerCase().includes(searchInput.toLowerCase())\n         )\n         const advancedSearchedMembers = members.filter(member => member[searchKey] ? member[searchKey].toString().toLowerCase().includes(advancedSearchInput.toLowerCase()) : null)\n         let newMembers = []\n         advanced_search ? newMembers = advancedSearchedMembers : newMembers = searchedMembers\n         const indexOfLastMember = currentPage * membersPerPage;\n         const indexOfFirstMember = indexOfLastMember - membersPerPage;\n         const currentMembers = newMembers.slice(indexOfFirstMember, indexOfLastMember);\n \n         const pageNumbers = [];\n         for (let i = 1; i <= Math.ceil(newMembers.length / membersPerPage); i++) {\n           pageNumbers.push(i);\n         }\n     \n         const renderPageNumbers = pageNumbers.map(number => {\n           return (\n               <button key={number} id={number} onClick={this.handlePageClick}>{number}</button>\n             \n           );\n         });\n \n         let keys = []\n         if (members.length>0) {\n             keys = Object.keys(members[0])\n         }\n        return (\n            <div className='container'>\n                <button onClick={this.handleAdvanceSearch}>{!advanced_search ? 'Advanced' : 'Basic'} Search</button>\n                <div hidden={!advanced_search}>\n                    <br />\n                    <select id=\"memberKeys\" onChange={this.handleSelectChange} value={searchKey}>\n                        {keys.map((k, idx) => <option key={idx} value={k}>{k}</option>)}\n                    </select>\n                    &nbsp;\n                    <input type='text' placeholder='Search...' onChange={this.handleInput} name='advancedSearchInput' value={advancedSearchInput} />\n                </div>\n                <div hidden={advanced_search}>\n                <br />\n                <input type='text' className='u-full-width' placeholder='Search...' onChange={this.handleInput} name='searchInput' value={searchInput} />\n                </div>\n                <table className='u-full-width'>\n                    <thead>\n                        <tr>\n                            <th>Congressman</th>\n                            <th>Gender</th>\n                            <th>Party-State</th>\n                            <th>Phone</th>\n                            <th>Office Address</th>\n                        </tr>\n                    </thead>\n                <tbody>\n                {!loading ? currentMembers.map((member, idx) => {\n                return <tr key={idx}>\n                            <td><Link to={'members/'+member.id}>{member.short_title+' '+member.first_name+' '+member.last_name}</Link></td>\n                            <td>{member.gender}</td>\n                            <td>{member.party+'-'+member.state}</td>\n                            <td>{member.phone}</td>\n                            <td>{member.office}</td>\n                        </tr>\n                }) : <tr><td>Loading...</td></tr>}\n                    \n                </tbody>\n                \n                </table>\n                {renderPageNumbers}\n                \n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        members: state.data.members,\n        loading: state.data.loading,\n    }\n  }\n\nexport default connect(mapStateToProps)(CongressList);\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\n\n\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions'\n\nclass CongressMember extends Component {\n\n    state = { \n        memberInfo: {},\n        loading: true,\n        selectedRoles: [0]\n    }\n    componentDidMount () {\n            this.fetchMember(this.props.match.params.id)\n      }\n      fetchMember = (id) => {\n\n        axios.get(\"https://api.propublica.org/congress/v1/members/\"+id+\".json\", { 'headers': { 'X-API-Key': '5og6CCG0fxLBhSoanWGSMFsr7FDIs609Mvrg8r6n' } })\n        .then((r => {\n            let fetchedItems = [];\n            fetchedItems = r.data.results[0]\n            console.log(fetchedItems)\n            if (r.data.results.length > 0) {\n\n                this.setState({memberInfo: fetchedItems, loading: false })\n            }\n        }))\n\n    }\n    handleRoles = (id) => {\n        \n        let newRoles = this.state.selectedRoles\n        if (this.state.selectedRoles.includes(id)) {\n            newRoles = newRoles.filter(i => i!==id)\n        } else {\n            newRoles.push(id)\n        }\n        this.setState({selectedRoles: newRoles})\n    }\n    render() {\n        const { loading, selectedRoles, memberInfo } = this.state\n        const member = this.props.members.find(m => m.id === this.props.match.params.id)\n        // const { members } = this.props\n        const loading2= <p>Loading...</p>\n        const details = memberInfo.roles ? memberInfo.roles.map((role, idx) => \n                                <li key={idx} onClick={() => this.handleRoles(idx)}>{role.chamber+', '+role.state+', '+moment(role.start_date).format('YYYY')+', '+(role.party=='D' ? 'Democrat' : 'Republican')}\n                                <ul hidden={!selectedRoles.includes(idx)}>\n                                    {role.committees ? role.committees.map((cm, idx) => <li key={idx}>{cm.name} ({cm.begin_date+' - '+cm.end_date})</li>) : null}\n                              </ul></li>) : ''\n\n        const card = member ? <div className=\"card\">\n                        <h1>{member.first_name+' '+member.last_name} {member.facebook_account ? <a target='_blank' href={'https://www.facebook.com/'+member.facebook_account}><FacebookIcon fontSize='large' color='primary' /></a> : null}\n                    \n                        {member.twitter_account ? <a target='_blank' href={'https://www.twitter.com/'+member.twitter_account}><TwitterIcon fontSize='large'/></a> : null}\n                        {member.youtube_account ? <a target='_blank' href={'https://www.youtube.com/'+member.youtube_account}><YouTubeIcon fontSize='large' color='error'/></a> : null} </h1>\n                        <h3>{member.party+'-'+member.state}</h3>\n                        <p>Office: {member.office}<br />\n                        Phone: {member.phone}</p>\n                        <p>Birth Date: {member.date_of_birth}</p>\n                        <p>Total Votes: {member.total_votes}</p>\n                        \n                        Roles:\n                        <ul>\n                        {!loading ? details : 'Loading...'}\n                        \n                        </ul>\n                        \n                        <p><a href={member.url} target='_blank'><button>Contact</button></a></p>\n                    </div> : null\n        return (\n            <div className='container'>\n                <Link to='/'><button>Back</button></Link>\n                <br />\n                {card}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        members: state.data.members,\n        loading: state.data.loading,\n    }\n  }\n\nexport default connect(mapStateToProps)(CongressMember)\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Switch, Route } from 'react-router-dom';\nimport 'react-skeleton-css/styles/skeleton.2.0.4.css'\nimport './App.css'\nimport Layout from './hoc/Layout'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions'\n\nimport CongressList from './components/CongressList'\nimport CongressMember from './components/CongressMember'\nfunction App(props) {\n  useEffect(function fetchMembers() {\n    props.onFetchMembers('116', 'senate')\n  });\n  const routes = (<Switch>\n    <Route path='/members/:id' component={CongressMember} />\n    <Route exact path='/' component={CongressList} />\n  </Switch>)\n  return (\n    <div>\n      <Layout>\n        {routes}\n      </Layout>\n    </div>\n  );\n}\nconst mapDispatchToProps= (dispatch)=>{\n      \n  return{\n      onFetchMembers: (congress, chamber) => dispatch(actions.fetchMembers(congress, chamber)),\n  }\n}\nexport default connect(null, mapDispatchToProps)(App);\n","// import React from 'react';\nimport axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\n\nexport const fetchMembersSuccess = (members) => {\n  return {\n      type: actionTypes.FETCH_MEMBERS_SUCCESS,\n      members: members\n  }\n}\nexport const fetchMembersFail = (error) => {\n  return {\n      type: actionTypes.FETCH_MEMBERS_FAILED,\n      error: error\n  }\n}\n\nexport const fetchMembersStart = () => {\n  return {\n      type: actionTypes.FETCH_MEMBERS_START\n  }\n}\n\nexport const fetchMembers = (congress, chamber) => {\n  return dispatch => {\n      dispatch(fetchMembersStart());\n      axios.get(\"https://api.propublica.org/congress/v1/\"+congress+\"/\"+chamber+\"/members.json\", { 'headers': { 'X-API-Key': '5og6CCG0fxLBhSoanWGSMFsr7FDIs609Mvrg8r6n' } })\n        .then((response => {\n            const members = response.data.results[0].members\n            dispatch(fetchMembersSuccess(members))\n        }))\n        .catch(err => {\n            dispatch(fetchMembersFail(err))\n            // this.setState({loading: false});\n        });\n  }\n};","export const FETCH_MEMBERS_START = 'FETCH_MEMBERS_START';\nexport const FETCH_MEMBERS_SUCCESS = 'FETCH_MEMBERS_SUCCESS';\nexport const FETCH_MEMBERS_FAILED = 'FETCH_MEMBERS_FAILED';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updatedObject = (oldObject, updatedProperities) => {\n    return {\n        ...oldObject,\n        ...updatedProperities\n    }\n}","import * as actionTypes from '../actions/actionTypes';\n\nimport { updatedObject } from '../../utils';\n\nconst initialState = {\n    members: [],\n    loading: true\n}\nconst data = (state = initialState, action) => {\n\n    switch (action.type) {\n        \n        case actionTypes.FETCH_MEMBERS_START:\n            return updatedObject(state, { loading: true});\n        case actionTypes.FETCH_MEMBERS_SUCCESS:\n            return updatedObject(state, { members: action.members, loading: false});\n        case actionTypes.FETCH_MEMBERS_FAILED:\n            return updatedObject(state, { loading: true});\n\n      default:\n        return state;\n    }\n    };\n  \n  export default data;","import { combineReducers } from 'redux';\nimport data from './data';\n\nconst reducer = combineReducers({\n  data\n});\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducers';\n\nconst enhancers = compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n  );\n  \nconst store = createStore(reducer, {}, enhancers);\n\nconst app = (\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>)   \nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}